@model DigitalWizardry.Dungeon.Models.DungeonViewModelCell

@{
    ViewData["Title"] = "Dungeon Generator";
}

<table>
	<tr>
		<td class="pad">
			<h3>Maze Generator Functional Demo</h3>
			<p>
				by Robb Priestley 
				<br>©️ 2017 Digital Wizardry Software Solutions Ltd.
			</p>
			<p class="btn">
				Level: <span id="level">1</span>
			</p>
			<p class="btn">
				<button onclick="Start()">Start</button>
			</p>
			<p class="btn">
				<button onclick="LevelDown();">Down</button>
			</p>
			<p class="btn">
				<button onclick="LevelUp(true);">Up</button>
			</p>
		</td>
		<td>
			<div id="grid" class="grid">
			@for(var y = 14; y >= 0; y--)
			{
				@for(var x = 0; x <= 14; x++)
				{
					@* Initialze grid with empty divs ready to take a tile name in the class *@
					var xs = x < 10 ? "0" + x.ToString() : x.ToString();
					var ys = y < 10 ? "0" + y.ToString() : y.ToString();
					var location = "g" + xs + ys;
					<div id="@location" class="tile @location"></div>
				}
			}
			</div>
		</td>
	</tr>
</table>